a {
  color: unset;
  text-decoration: none;
  cursor: pointer;
}

body {
  background-color: aqua;
  background-image: url(img/cool-background\ \(28\).png);
  text-align: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

h1, h2, h3{
  color: white;
}

.loader {
  --path: blue;
  --rosado: #EE3D8F;
  --celeste: #37BBED;
  --morado: #9283BE;
  --dot: white;
  --duration: 3s;
  width: 44px;
  height: 44px;
  position: relative;
 
}

.loader:before {
  content: '';
  width: 6px;
  height: 6px;
  border-radius: 50%;
  position: absolute;
  display: block;
  background: var(--dot);
  top: 37px;
  left: 19px;
  transform: translate(-18px, -18px);
  animation: dotRect var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
}

.loader svg {
  display: block;
  width: 100%;
  height: 100%;
}

.loader svg rect,
.loader svg polygon,
.loader svg circle {
  fill: none;
  stroke: var(--path);
  stroke-width: 10px;
  stroke-linejoin: round;
  stroke-linecap: round;
}

.loader svg rect {
  stroke: var(--celeste);
}

.loader svg polygon {
  stroke: var(--rosado);
}

.loader svg circle {
  stroke: var(--morado);
}

.loader svg polygon {
  stroke-dasharray: 145 76 145 76;
  stroke-dashoffset: 0;
  animation: pathTriangle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
}

.loader svg rect {
  stroke-dasharray: 192 64 192 64;
  stroke-dashoffset: 0;
  animation: pathRect 3s cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
}

.loader svg circle {
  stroke-dasharray: 150 50 150 50;
  stroke-dashoffset: 75;
  animation: pathCircle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
}

.loader.triangle {
  width: 48px;
}

.loader.triangle:before {
  left: 21px;
  transform: translate(-10px, -18px);
  animation: dotTriangle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
}

@keyframes pathTriangle {
  33% {
    stroke-dashoffset: 74;
  }

  66% {
    stroke-dashoffset: 147;
  }

  100% {
    stroke-dashoffset: 221;
  }
}

@keyframes dotTriangle {
  33% {
    transform: translate(0, 0);
  }

  66% {
    transform: translate(10px, -18px);
  }

  100% {
    transform: translate(-10px, -18px);
  }
}

@keyframes pathRect {
  25% {
    stroke-dashoffset: 64;
  }

  50% {
    stroke-dashoffset: 128;
  }

  75% {
    stroke-dashoffset: 192;
  }

  100% {
    stroke-dashoffset: 256;
  }
}

@keyframes dotRect {
  25% {
    transform: translate(0, 0);
  }

  50% {
    transform: translate(18px, -18px);
  }

  75% {
    transform: translate(0, -36px);
  }

  100% {
    transform: translate(-18px, -18px);
  }
}

@keyframes pathCircle {
  25% {
    stroke-dashoffset: 125;
  }

  50% {
    stroke-dashoffset: 175;
  }

  75% {
    stroke-dashoffset: 225;
  }

  100% {
    stroke-dashoffset: 275;
  }
}

.loader {
  display: inline-block;
  margin: 0 16px;
}




/* ratita */
.wheel-and-hamster {
  --dur: 1s;
  position: relative;
  width: 12em;
  height: 12em;
  font-size: 14px;
  margin: 40px auto;
}

.wheel,
.hamster,
.hamster div,
.spoke {
  position: absolute;
}

.wheel,
.spoke {
  border-radius: 50%;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.wheel {
  background: radial-gradient(100% 100% at center, hsla(0, 0%, 60%, 0) 47.8%, hsl(0, 0%, 60%) 48%);
  z-index: 2;
}

.hamster {
  animation: hamster var(--dur) ease-in-out infinite;
  top: 50%;
  left: calc(50% - 3.5em);
  width: 7em;
  height: 3.75em;
  transform: rotate(4deg) translate(-0.8em, 1.85em);
  transform-origin: 50% 0;
  z-index: 1;
}

.hamster__head {
  animation: hamsterHead var(--dur) ease-in-out infinite;
  background: hsl(30, 90%, 55%);
  border-radius: 70% 30% 0 100% / 40% 25% 25% 60%;
  box-shadow: 0 -0.25em 0 hsl(30, 90%, 80%) inset,
    0.75em -1.55em 0 hsl(30, 90%, 90%) inset;
  top: 0;
  left: -2em;
  width: 2.75em;
  height: 2.5em;
  transform-origin: 100% 50%;
}

.hamster__ear {
  animation: hamsterEar var(--dur) ease-in-out infinite;
  background: hsl(0, 90%, 85%);
  border-radius: 50%;
  box-shadow: -0.25em 0 hsl(30, 90%, 55%) inset;
  top: -0.25em;
  right: -0.25em;
  width: 0.75em;
  height: 0.75em;
  transform-origin: 50% 75%;
}

.hamster__eye {
  animation: hamsterEye var(--dur) linear infinite;
  background-color: hsl(0, 0%, 0%);
  border-radius: 50%;
  top: 0.375em;
  left: 1.25em;
  width: 0.5em;
  height: 0.5em;
}

.hamster__nose {
  background: hsl(0, 90%, 75%);
  border-radius: 35% 65% 85% 15% / 70% 50% 50% 30%;
  top: 0.75em;
  left: 0;
  width: 0.2em;
  height: 0.25em;
}

.hamster__body {
  animation: hamsterBody var(--dur) ease-in-out infinite;
  background: hsl(30, 90%, 90%);
  border-radius: 50% 30% 50% 30% / 15% 60% 40% 40%;
  box-shadow: 0.1em 0.75em 0 hsl(30, 90%, 55%) inset,
    0.15em -0.5em 0 hsl(30, 90%, 80%) inset;
  top: 0.25em;
  left: 2em;
  width: 4.5em;
  height: 3em;
  transform-origin: 17% 50%;
  transform-style: preserve-3d;
}

.hamster__limb--fr,
.hamster__limb--fl {
  clip-path: polygon(0 0, 100% 0, 70% 80%, 60% 100%, 0% 100%, 40% 80%);
  top: 2em;
  left: 0.5em;
  width: 1em;
  height: 1.5em;
  transform-origin: 50% 0;
}

.hamster__limb--fr {
  animation: hamsterFRLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30, 90%, 80%) 80%, hsl(0, 90%, 75%) 80%);
  transform: rotate(15deg) translateZ(-1px);
}

.hamster__limb--fl {
  animation: hamsterFLLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30, 90%, 90%) 80%, hsl(0, 90%, 85%) 80%);
  transform: rotate(15deg);
}

.hamster__limb--br,
.hamster__limb--bl {
  border-radius: 0.75em 0.75em 0 0;
  clip-path: polygon(0 0, 100% 0, 100% 30%, 70% 90%, 70% 100%, 30% 100%, 40% 90%, 0% 30%);
  top: 1em;
  left: 2.8em;
  width: 1.5em;
  height: 2.5em;
  transform-origin: 50% 30%;
}

.hamster__limb--br {
  animation: hamsterBRLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30, 90%, 80%) 90%, hsl(0, 90%, 75%) 90%);
  transform: rotate(-25deg) translateZ(-1px);
}

.hamster__limb--bl {
  animation: hamsterBLLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30, 90%, 90%) 90%, hsl(0, 90%, 85%) 90%);
  transform: rotate(-25deg);
}

.hamster__tail {
  animation: hamsterTail var(--dur) linear infinite;
  background: hsl(0, 90%, 85%);
  border-radius: 0.25em 50% 50% 0.25em;
  box-shadow: 0 -0.2em 0 hsl(0, 90%, 75%) inset;
  top: 1.5em;
  right: -0.5em;
  width: 1em;
  height: 0.5em;
  transform: rotate(30deg) translateZ(-1px);
  transform-origin: 0.25em 0.25em;
}

.spoke {
  animation: spoke var(--dur) linear infinite;
  background: radial-gradient(100% 100% at center, hsl(0, 0%, 60%) 4.8%, hsla(0, 0%, 60%, 0) 5%),
    linear-gradient(hsla(0, 0%, 55%, 0) 46.9%, hsl(0, 0%, 65%) 47% 52.9%, hsla(0, 0%, 65%, 0) 53%) 50% 50% / 99% 99% no-repeat;
}

/* Animations */
@keyframes hamster {

  from,
  to {
    transform: rotate(4deg) translate(-0.8em, 1.85em);
  }

  50% {
    transform: rotate(0) translate(-0.8em, 1.85em);
  }
}

@keyframes hamsterHead {

  from,
  25%,
  50%,
  75%,
  to {
    transform: rotate(0);
  }

  12.5%,
  37.5%,
  62.5%,
  87.5% {
    transform: rotate(8deg);
  }
}

@keyframes hamsterEye {

  from,
  90%,
  to {
    transform: scaleY(1);
  }

  95% {
    transform: scaleY(0);
  }
}

@keyframes hamsterEar {

  from,
  25%,
  50%,
  75%,
  to {
    transform: rotate(0);
  }

  12.5%,
  37.5%,
  62.5%,
  87.5% {
    transform: rotate(12deg);
  }
}

@keyframes hamsterBody {

  from,
  25%,
  50%,
  75%,
  to {
    transform: rotate(0);
  }

  12.5%,
  37.5%,
  62.5%,
  87.5% {
    transform: rotate(-2deg);
  }
}

@keyframes hamsterFRLimb {

  from,
  25%,
  50%,
  75%,
  to {
    transform: rotate(50deg) translateZ(-1px);
  }

  12.5%,
  37.5%,
  62.5%,
  87.5% {
    transform: rotate(-30deg) translateZ(-1px);
  }
}

@keyframes hamsterFLLimb {

  from,
  25%,
  50%,
  75%,
  to {
    transform: rotate(-30deg);
  }

  12.5%,
  37.5%,
  62.5%,
  87.5% {
    transform: rotate(50deg);
  }
}

@keyframes hamsterBRLimb {

  from,
  25%,
  50%,
  75%,
  to {
    transform: rotate(-60deg) translateZ(-1px);
  }

  12.5%,
  37.5%,
  62.5%,
  87.5% {
    transform: rotate(20deg) translateZ(-1px);
  }
}

@keyframes hamsterBLLimb {

  from,
  25%,
  50%,
  75%,
  to {
    transform: rotate(20deg);
  }

  12.5%,
  37.5%,
  62.5%,
  87.5% {
    transform: rotate(-60deg);
  }
}

@keyframes hamsterTail {

  from,
  25%,
  50%,
  75%,
  to {
    transform: rotate(30deg) translateZ(-1px);
  }

  12.5%,
  37.5%,
  62.5%,
  87.5% {
    transform: rotate(10deg) translateZ(-1px);
  }
}

@keyframes spoke {
  from {
    transform: rotate(0);
  }

  to {
    transform: rotate(-1turn);
  }
}

/*minecraft*/
/* Minecraft switch made by: csozi | Website: english.csozi.hu*/

/* The switch - the box around the slider */
.switch {
  font-size: 17px;
  position: relative;
  display: inline-block;
  width: 4em;
  height: 2em;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 1;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
}

.off {
  position: absolute;
  content: "";
  height: 2em;
  width: 2em;
  background-color: white;
  transition: .4s;
  image-rendering: pixelated;
  opacity: 1;
}

.on {
  position: absolute;
  content: "";
  height: 2em;
  width: 2em;
  background-color: white;
  transition: .4s;
  image-rendering: pixelated;
  opacity: 0;
}

.switch input:checked+.slider {
  background-color: #ccc;
}

.switch input:focus+.slider {
  box-shadow: 0 0 1px #ccc;
}

.switch input:checked~.off {
  transform: translateX(2em);
}

.switch input:checked~.on {
  transform: translateX(2em);
  opacity: 1;
}

.button {
  cursor: pointer;
  position: relative;
  display: inline-block;
  transform-style: preserve-3d;
  transform: rotateX(-45deg) rotateY(25deg) rotateZ(0deg);
  background-color: transparent;
  border: none;
}

.lid {
  position: absolute;
  transform-style: preserve-3d;
  transition: all 1s ease-in-out;
  transform-origin: 0 80px -120px;
  height: 80px;
  width: 250px;
  background-color: rgba(0, 0, 0, 0);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.lid:hover,
.button:hover .lid {
  transform: translate(-50%, -50%) rotateX(60deg);
}

.lid .side {
  display: inline-block;
  width: 250px;
  height: 250px;
  background-color: rgba(63, 112, 141, 0.308);
  position: absolute;
  top: 50%;
  left: 50%;
  border: solid 1px rgba(0, 132, 255, 0.226);
}

.front {
  transform: translate(-50%, -50%) translateZ(125px);
  height: 80px !important;
}

.top {
  transform: translate(-50%, -50%) rotateX(90deg) translateZ(40px);
  background-color: rgba(167, 47, 10, 0.438);
}

.left {
  transform: translate(-50%, -50%) rotateY(90deg) translateZ(125px);
  height: 80px !important;
}

.right {
  transform: translate(-50%, -50%) rotateY(-90deg) translateZ(125px);
  height: 80px !important;
}

.back {
  transform: translate(-50%, -50%) rotateY(180deg) translateZ(125px);
  background-color: rgba(250, 234, 18, 0.418);
  height: 80px !important;
}

.back::before {
  content: "";
  display: inline-block;
  position: absolute;
  width: 20px;
  height: 10px;
  background-color: black;
  bottom: 0;
  left: 10px;
}

.back::after {
  content: "";
  display: inline-block;
  position: absolute;
  width: 20px;
  height: 10px;
  background-color: black;
  bottom: 0;
  right: 10px;
}

.panels {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotateX(90deg) translateZ(-40px);
}

.panel-1 {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 250px;
  width: 250px;
  background-color: rgb(166, 255, 0);
  background: repeating-linear-gradient(45deg,
      rgb(247, 243, 33) 0% 2%,
      black 2% 4%);
  box-shadow: 0px 0px 0px 20px red;
}

.panel-2 {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 200px;
  width: 200px;
  background-color: rgb(0, 0, 0);
  background: linear-gradient(-135deg, rgb(43, 42, 42), black);
  border: solid 5px rgb(247, 243, 33);
}

.panel-1::after {
  content: "SELF-DESTRUCT";
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 290px;
  height: 25px;
  color: white;
  font-weight: bold;
  transform: translate(-50%, -50%) translateY(170px);
  font-size: larger;
  background-color: red;
}

.panel-1::before {
  content: "WARNING: DANGER";
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 290px;
  height: 25px;
  color: white;
  font-weight: bold;
  transform: translate(-50%, -50%) rotateZ(90deg) translateY(170px);
  font-size: larger;
  background-color: red;
}

.btn-trigger {
  position: absolute;
  top: 50%;
  right: 50%;
  transform: translate(-50%, -50%);
}

.btn-trigger-1 {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 100px;
  background-color: rgb(207, 195, 195);
  box-shadow: -0px 1px 0 rgb(54, 54, 54), -0px 2px 0 rgb(54, 54, 54),
    -1px 3px 0 rgb(54, 54, 54), -1px 4px 0 rgb(54, 54, 54),
    -2px 5px 0 rgb(54, 54, 54), -2px 6px 0 rgb(54, 54, 54),
    -3px 7px 0 rgb(54, 54, 54), -3px 8px 0 rgb(54, 54, 54),
    -4px 9px 0 rgb(54, 54, 54), -4px 10px 0 rgb(54, 54, 54),
    -5px 11px 0 rgb(54, 54, 54), -5px 12px 0 rgb(54, 54, 54),
    -6px 13px 0 rgb(54, 54, 54), -6px 14px 0 rgb(54, 54, 54),
    -7px 15px 0 rgb(54, 54, 54), -7px 16px 0 rgb(54, 54, 54),
    -8px 17px 0 rgb(54, 54, 54), -8px 18px 0 rgb(54, 54, 54),
    -9px 19px 0 rgb(54, 54, 54), -9px 20px 0 rgb(54, 54, 54),
    -10px 21px 0 rgb(54, 54, 54), -10px 22px 0 rgb(54, 54, 54),
    -11px 23px 0 rgb(54, 54, 54), -11px 24px 0 rgb(54, 54, 54),
    -12px 25px 0 rgb(54, 54, 54), -12px 26px 0 rgb(54, 54, 54);
  border-radius: 50%;
  transform: translate(-50%, -50%) translateZ(50px);
}

.btn-trigger-2 {
  position: absolute;
  width: 80px;
  height: 80px;
  background-color: rgb(241, 17, 17);
  box-shadow: -0px 1px 0 rgb(128, 5, 5), -0px 2px 0 rgb(128, 5, 5),
    -1px 3px 0 rgb(128, 5, 5), -1px 4px 0 rgb(128, 5, 5),
    -2px 5px 0 rgb(128, 5, 5), -2px 6px 0 rgb(128, 5, 5),
    -3px 7px 0 rgb(128, 5, 5), -3px 8px 0 rgb(128, 5, 5),
    -4px 9px 0 rgb(128, 5, 5), -4px 10px 0 rgb(128, 5, 5),
    -5px 11px 0 rgb(128, 5, 5), -5px 12px 0 rgb(128, 5, 5),
    -6px 13px 0 rgb(128, 5, 5), -6px 14px 0 rgb(128, 5, 5),
    -7px 15px 0 rgb(128, 5, 5), -7px 16px 0 rgb(128, 5, 5);
  border-radius: 50%;
  transition: all 0.3s;
  transform: translate(-40%, -70%) translateZ(100px);
}

.btn-trigger-2:active {
  transform: translate(-50%, -50%) translateZ(100px);
  box-shadow: none;
}



@keyframes rotate {
  100% {
    transform: rotateX(360deg);
  }
}


/*boton*/
button {
  display: flex;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  height: 50px;
  position: relative;
  padding: 0 20px;
  font-size: 18px;
  text-transform: uppercase;
  border: 0;
  box-shadow: hsl(210deg 87% 36%) 0px 7px 0px 0px;
  background-color: hsl(210deg 100% 44%);
  border-radius: 12px;
  overflow: hidden;
  transition: 31ms cubic-bezier(.5, .7, .4, 1);
}

button:before {
  content: attr(alt);
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  inset: 0;
  font-size: 15px;
  font-weight: bold;
  color: white;
  letter-spacing: 4px;
  opacity: 1;
}

button:active {
  box-shadow: none;
  transform: translateY(7px);
  transition: 35ms cubic-bezier(.5, .7, .4, 1);
}

button:hover:before {
  transition: all .0s;
  transform: translateY(100%);
  opacity: 0;
}

button i {
  color: white;
  font-size: 15px;
  font-weight: bold;
  letter-spacing: 4px;
  font-style: normal;
  transition: all 2s ease;
  transform: translateY(-20px);
  opacity: 0;
}

button:hover i {
  transition: all .2s ease;
  transform: translateY(0px);
  opacity: 1;
}

button:hover i:nth-child(1) {
  transition-delay: 0.045s;
}

button:hover i:nth-child(2) {
  transition-delay: calc(0.045s * 3);
}

button:hover i:nth-child(3) {
  transition-delay: calc(0.045s * 4);
}

button:hover i:nth-child(4) {
  transition-delay: calc(0.045s * 5);
}

button:hover i:nth-child(6) {
  transition-delay: calc(0.045s * 6);
}

button:hover i:nth-child(7) {
  transition-delay: calc(0.045s * 7);
}

button:hover i:nth-child(8) {
  transition-delay: calc(0.045s * 8);
}

button:hover i:nth-child(9) {
  transition-delay: calc(0.045s * 9);
}

button:hover i:nth-child(10) {
  transition-delay: calc(0.045s * 10);
}


section{
  padding: 40px;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  align-items: center;
  gap: 30px;
  justify-content: center;
}

section a{
  width: 300px;
}

section a button{
  width: 100%;
}


